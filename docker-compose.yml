###############################################################################
#                          Generated on phpdocker.io                          #
# 
# The mysql DB may take a while to start.
#
# webDiplomacy instructions:
# PHP Composer is required to be installed in order to get the required PHP dependencies, this is a requirement
# for the system you loaded the sourcecode onto before starting the docker images.
# Run composer update in the source root folder to create the vendor folder 
# which contains the required PHP dependencies.
# apt install composer; composer update
#
# Then create the docker containers using docker-compose up -d . Wait for nginx to start.
#
# Check http://localhost:43000/gamemaster-entrypoint.txt , which will output the results of the startup
# process; waiting for the database server to initialize, installing the empty DB, etc. This will
# take some time when started for the first time.
# Once the server is ready you should see that gamemaster has started running. 
# If there is an issue this is the best place to check.
#
# Register a user account via http://localhost:43000/register.php, using any e-mail address
# then use http://localhost:43001 / mailhog to access the registration link.
# Taking the registration link code and adding it to your webserver should give e.g.:
# (If using the config.sample.php defaults you can use the link below directly:)
# http://localhost:43000/register.php?emailToken=9513e6f6%7C1665482821%7Ctest%40test.com
# Complete filling the registration form, then once logged on:
# Go to http://localhost:43000/gamemaster.php?gameMasterSecret= to set self as admin
# Go to http://localhost:43000/admincp.php?tab=Control%20Panel&actionName=maintenance#maintenance to enable maintenance mode
# Go to http://localhost:43000/admincp.php?actionName=wipeVariants#wipeVariants to clear variant data
# Go to http://localhost:43000/admincp.php?actionName=updateVariantInfo&variantID=#updateVariantInfo to regenerate variant data
# Go to http://localhost:43000/datc.php?testID=101&batchTest=12345 to run through the DATC test cases
# Go to http://localhost:43000/admincp.php?tab=Control%20Panel&actionName=maintenance#maintenance to disable maintenance mode
# 
# If docker is running in hyper-V mode on Windows you may need to enable developer mode so that symlinks work for non-admins,
# in order for npm to work over the hyper-V fileshare.
# 
# Server is ready for dev work
#
# If config.php isn't changed you can use these links below to quickly register 7 users:
# http://localhost:43000/logon.php?logoff=on
# http://localhost:43000/register.php?emailToken=9513e6f6%7C1665482821%7Ctest%40test.com
# http://localhost:43000/logon.php?logoff=on
# http://localhost:43000/register.php?emailToken=b3aa9320%7C1665483920%7Ctest2%40test.com
# http://localhost:43000/logon.php?logoff=on
# http://localhost:43000/register.php?emailToken=8749c175%7C1665483937%7Ctest3%40test.com
# http://localhost:43000/logon.php?logoff=on
# http://localhost:43000/register.php?emailToken=d9da3907%7C1665483948%7Ctest4%40test.com
# http://localhost:43000/logon.php?logoff=on
# http://localhost:43000/register.php?emailToken=f62e0ff3%7C1665483960%7Ctest5%40test.com
# http://localhost:43000/logon.php?logoff=on
# http://localhost:43000/register.php?emailToken=d63245b5%7C1665483971%7Ctest6%40test.com
# http://localhost:43000/logon.php?logoff=on
# http://localhost:43000/register.php?emailToken=e2c45b63%7C1665483982%7Ctest7%40test.com
#
# To use the default no-press bots start up the bots profile.
# Note that the bot docker image has to download a ~300MB file on startup, and on first run
# there is more installation than most, so bots can take some time to start.
#
###############################################################################
#Linux set in php-overrides.ini
# ufw allow from 172.17.0.0/12 to any port 9003 proto tcp comment 'Allow Xdebug from Docker subnet'
#XDEBUG_CONFIG: client_host=host.docker.internal client_port=9003 #Windows/Max
#ERROR 1130 (HY000): Host '172.18.0.8' is not allowed to connect to this MariaDB server
#GRANT ALL PRIVILEGES ON webdiplomacy.* TO 'webdiplomacy'@'%' IDENTIFIED BY 'mypassword123';
#FLUSH PRIVILEGES;
#CREATE DATABASE webdiplomacy;
version: "3.1"
services:
  mariadb:
    image: "mariadb:10.6"
    container_name: "webdiplomacy-db"
    restart: always
    working_dir: /application
    volumes:
      - "./:/application"
    ports:
      - "43003:3306"

  webserver:
    image: "nginx:alpine"
    working_dir: /application
    volumes:
      - "./:/application"
      - "./phpdocker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "43000:80"
    depends_on:
      - "php-fpm"

  sse:
    image: "node:16.15.1-alpine3.14"
    container_name: webdiplomacy-sse
    working_dir: /application
    volumes:
      - "./sse-server:/application"
    ports:
      - "43006:43006"
    command: >
      sh -c "node server.js"
    depends_on:
      - "redis"
      
  redis:
    image: redis:latest
    container_name: webdiplomacy-redis
    ports:
      - "43005:6379"
      
  php-fpm:
    build: phpdocker/php-fpm
    working_dir: /application
    volumes:
      - "./:/application"
      - "./phpdocker/php-fpm/php-ini-overrides.ini:/etc/php/8.4/fpm/conf.d/99-overrides.ini"
    depends_on:
      - "mariadb"
